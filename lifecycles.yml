#
# Copyright (C) 2022 Mike Hummel (mh@mhus.de)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

lifecycles:

  - name: release
    steps:
      # #####################
      # GIT Stuff
      # #####################
      - title: Git Status
        target: con.git
        arguments:
          - 'status'
        sort: order
        properties:
          ignoreReturnCode: true

      - title: Confirm Git Status
        target: confirm
        properties:
          prompt: Confirm
          message: |
            Check if GIT have to be commited before, if
            everything is commited than press y to process deployment.

      - title: Git Reset
        target: con.git
        arguments:
          - "reset"
          - "--hard"
      - title: Git Pull
        target: con.git
        arguments:
          - "pull"
      # #####################
      # New Version
      # #####################
      - title: Calculate new versions
        target: con.calculateNewVersion

      - title: Confirm New Versions
        target: confirm
        properties:
          prompt: Confirm
          message: Check if new Versions are set correctly

      # #####################
      # Prepare code
      # #####################

      - title: Beautify source code
        target: con.maven
        arguments:
          - git-code-format:format-code
          - "-DglobPattern=**/*"
          - "-P release"
        selector:
          version.changed: true
          group: prepare

      - title: set license information
        target: con.maven
        arguments:
          - license:format
          - "-P release"
        selector:
          version.changed: true
          group: prepare

      # #####################
      # Update versions
      # #####################
      - title: Set new version properties
        target: con.updatePomProperties
        selector:
          version.changed: true
          
      # #####################
      # Update and build parent
      # #####################
      - title: Set new project version
        target: con.maven
        arguments:
          - versions:set
          - "-DnewVersion=${project.version}"
        sort: order
        selector:
          version.changed: true
          group: parent

      - title: Install parent pom
        target: con.maven
        arguments:
          - clean
          - install
          - "-P release"
        selector:
          version.changed: true
          group: parent

      - title: Validate No Snapshots
        target: con.maven
        arguments:
          - 'de.mhus.mvn.plugin:versioning-maven-plugin:1.0.1:validate-no-snapshots'
          - "-P release"
        sort: order
        selector:
          version.changed: true
          group: parent

      # #####################
      # deploy all other projects
      # #####################

      - title: Set new parent version
        target: con.updatePomParentVersion
        selector:
          version.changed: true
          group: jar
        properties:
          version: ${projects.common-parent.version}

      - title: Set new project version
        target: con.maven
        arguments:
          - versions:set
          - "-DnewVersion=${project.version}"
        selector:
          version.changed: true
          group: jar

      - title: Compile Projects
        target: con.maven
        arguments:
          - clean
          - install
          - "-P release"
        sort: order
        selector:
          group: jar
          version.changed: true

      - title: Validate No Snapshots
        target: con.maven
        arguments:
          - 'de.mhus.mvn.plugin:versioning-maven-plugin:1.0.1:validate-no-snapshots'
          - "-P release"
        sort: order
        selector:
          version.changed: true
          group: jar

      - title: Deploy Projects
        target: con.maven
        arguments:
          - deploy
          - "-P release"
        sort: order
        selector:
          group:
            - deploy
          version.changed: true


      # #####################
      # Post actions
      # #####################

      - title: Save version history
        target: con.persistNewVersions

      - title: Git Add
        target: con.git
        arguments:
          - add
          - "-A"
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

      - title: Git Commit
        target: con.git
        arguments:
          - commit
          - "-m"
          - "${project.version}"
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true
          
      - title: Git New Tag
        target: con.git
        arguments:
          - tag 
          - "${project.version}"
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

      - title: Git Push New Tag
        target: con.git
        arguments:
          - push
          - origin
          - --tags
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

      - title: Git Push
        target: con.git
        arguments:
          - 'push'
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

      - title: Check deployment
        target: confirm
        condition: ${waitafterdeploy} == 'yes'
        properties:
          prompt: Confirm
          message: |
            Check if deployment was successful

      # #####################
      # Snapshot Version
      # #####################

      - title: Set project snapshot version
        target: nextSnapshotVersions

      - title: Set snapshot version properties
        target: con.updatePomProperties
        selector:
          version.changed: true

      - title: Set snapshot project version
        target: con.maven
        arguments:
          - versions:set
          - "-DnewVersion=${project.version}"
        sort: order
        selector:
          group: parent
          version.changed: true

      - title: Compile Parent Snapshot
        target: con.maven
        arguments:
          - clean
          - install
        sort: order
        selector:
          group: parent
          version.changed: true

      - title: Set snapshot parent version
        target: con.updatePomParentVersion
        selector:
          group: deploy
        sort: order
        properties:
          version: ${projects.mhus-parent.version}
          version.changed: true

      - title: Set snapshot project version
        target: con.maven
        arguments:
          - versions:set
          - "-DnewVersion=${project.version}"
        sort: order
        selector:
          group: deploy
          version.changed: true

      # #####################
      # Compile all projects
      # #####################
      - title: Compile All
        target: con.maven
        arguments:
          - clean
          - 'install -fn'
        sort: order
        selector:
          group: deploy
          version.changed: true

      - title: compile templated files - snapshot
        target: con.maven
        arguments:
        - de.mhus.mvn.plugin:tmpl-maven-plugin:2.0.0:tmpl
        selector:
          version.changed: true

      # #####################
      # Commit Snapshot
      # #####################
      - title: Git Add Snapshot
        target: con.git
        arguments:
          - add
          - -A
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

      - title: Git Commit Snapshot
        target: con.git
        arguments:
          - commit
          - -m
          - "SNAPSHOT"
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

      - title: Git Push Snapshot
        target: con.git
        arguments:
          - push
        selector:
          version.changed: true
        properties:
          ignoreReturnCode: true

  - name: prepare
    steps:
      - title: Beautify source code
        target: con.maven
        arguments:
          - git-code-format:format-code
          - "-DglobPattern=**/*"
        selector:
          group: prepare

      - title: set license information
        target: con.maven
        arguments:
          - license:format
          - "-P release"
        selector:
          group: prepare

      - title: compile templated files
        target: con.maven
        arguments:
          - de.mhus.mvn.plugin:tmpl-maven-plugin:1.1.0:tmpl
        selector:
          group: prepare
